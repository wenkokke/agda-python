name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:

  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │ ┌───────────── hour (0 - 23)
    #        │ │ ┌───────────── day of the month (1 - 31)
    #        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │ │ │ │ │
    #        │ │ │ │ │
    #        │ │ │ │ │
    - cron: "0 0 * * 0"

  workflow_dispatch:

defaults:
  run:
    shell: sh

env:
  # NOTE: cibuildwheel builds manylinux wheels in a container, and the versions
  #       of GHC and Cabal are hardcoded in the `before-all-$ID.sh` scripts.
  DEFAULT_GHC_VERSION: "9.4.4"
  DEFAULT_CABAL_VERSION: "3.10.1.0"
  DEFAULT_PYTHON_VERSION: "3.11"

jobs:
  ################################################################################
  # Build package with cibuildwheel
  ################################################################################

  build:
    name: "Build / ${{ matrix.os.name }}"
    runs-on: ${{ matrix.os.type }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - name: "Linux - manylinux"
            type: "ubuntu-latest"
            arch: "x86_64"
            plat: "manylinux"
          - name: "Linux - musllinux"
            type: "ubuntu-latest"
            arch: "x86_64"
            plat: "musllinux"
          - name: "macOS"
            type: "macos-latest"
            arch: "x86_64"
            plat: "macosx"
          - name: "Windows"
            type: "windows-latest"
            arch: "AMD64"
            plat: "win"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - # Required to run job via act: https://github.com/nektos/act
        uses: actions/setup-python@v4
        with:
          cache: "pip"
          cache-dependency-path: "./requirements-ci.txt"
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - # Required to run job via act: https://github.com/nektos/act
        run: pip install -r "./requirements-ci.txt"

      - # 19-05-2023:
        # Required to build the wheels on macOS and Windows, but not on Linux,
        # as Linux builds are run in containers, where GHC and Cabal are built
        # by the `./scripts/before-all.sh` scripts.
        if: matrix.os.name == 'macOS' || matrix.os.name == 'Windows'
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ env.DEFAULT_GHC_VERSION }}
          cabal-version: ${{ env.DEFAULT_CABAL_VERSION }}

      - uses: pypa/cibuildwheel@v2.16.0
        with:
          output-dir: "./wheelhouse"
          config-file: "{package}/pyproject.toml"
        env:
          CIBW_ARCHS: "${{ matrix.os.arch }}"
          CIBW_BUILD: "*${{ matrix.os.plat }}*"
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - uses: actions/upload-artifact@v3
        with:
          name: "wheelhouse"
          path: "./wheelhouse/*.whl"

  ################################################################################
  # Publish package to GitHub Releases
  ################################################################################

  publish-to-github-releases:
    name: Publish to GitHub Releases
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]

    permissions:
      contents: write

    steps:
      - name: Download wheelhouse
        uses: actions/download-artifact@v3
        with:
          name: "wheelhouse"
          path: "./wheelhouse"

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: "./wheelhouse/*.whl"
          fail_on_unmatched_files: true

  ################################################################################
  # Publish package to PyPI
  ################################################################################

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]

    environment:
      name: pypi
      url: https://pypi.org/p/agda

    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download wheelhouse
        uses: actions/download-artifact@v3
        with:
          name: "wheelhouse"
          path: "./wheelhouse"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: "./wheelhouse"

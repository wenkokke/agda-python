name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
  workflow_dispatch:

defaults:
  run:
    shell: sh

# Limit concurrent runs to one per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # 04-08-2023:
  # cibuildwheel builds linux wheels in a manylinux_ghc container, which
  # hardcodes the GHC and Cabal version. To change the GHC and Cabal versions,
  # you must update the containers in pyproject.toml under tool.cibuildwheel.
  #
  # See: https://github.com/wenkokke/manylinux_ghc
  DEFAULT_GHC_VERSION: "9.6.5"
  DEFAULT_CABAL_VERSION: "3.12.1.0"
  DEFAULT_PYTHON_VERSION: "3.12"

jobs:
  ################################################################################
  # Build package with cibuildwheel
  ################################################################################

  build:
    name: "${{ matrix.python.tag }}-${{ matrix.os.plat }}"
    runs-on: ${{ matrix.os.type }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - type: "ubuntu-latest"
            plat: "manylinux_x86_64"
          - type: "ubuntu-latest"
            plat: "musllinux_x86_64"
          - type: "macos-13"
            plat: "macosx_x86_64"
          - type: "macos-latest"
            plat: "macosx_arm64"
          - type: "windows-latest"
            plat: "win_amd64"
        python:
          - tag: "cp39"
          - tag: "cp310"
          - tag: "cp311"
          - tag: "cp312"
          # - tag: "cp313"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - # Workaround for out-of-memory error
        # See: https://github.com/pypa/cibuildwheel/issues/1586
        if: runner.os == 'Linux'
        run: docker system prune -a -f

      - # 19-05-2023:
        # Required to build the wheels on macOS and Windows, but not on Linux,
        # as Linux builds are run in containers, where GHC and Cabal are built
        # by the `./scripts/before-all.sh` scripts.
        if: runner.os == 'macOS' || runner.os == 'Windows'
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ env.DEFAULT_GHC_VERSION }}
          cabal-version: ${{ env.DEFAULT_CABAL_VERSION }}

      - uses: pypa/cibuildwheel@v3.1.3
        with:
          output-dir: "./wheelhouse"
          config-file: "{package}/pyproject.toml"
        env:
          CIBW_BEFORE: "cabal update"
          CIBW_BUILD: "${{ matrix.python.tag }}-${{ matrix.os.plat }}"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: "wheelhouse-${{ matrix.python.tag }}-${{ matrix.os.plat }}"
          path: ./wheelhouse/*.whl
        # Always upload wheels, even if the build failed
        if: always()

  ################################################################################
  # Publish package to GitHub Releases
  ################################################################################

  publish-to-github-releases:
    name: Publish to GitHub Releases
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]

    permissions:
      contents: write

    steps:
      - name: Download wheelhouse
        uses: actions/download-artifact@v4
        with:
          pattern: wheelhouse-*-*
          path: wheelhouse
          merge-multiple: true

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: "./wheelhouse/*.whl"
          fail_on_unmatched_files: true

  ################################################################################
  # Publish package to PyPI
  ################################################################################

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]

    environment:
      name: pypi
      url: https://pypi.org/p/agda

    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download wheelhouse
        uses: actions/download-artifact@v4
        with:
          pattern: wheelhouse-*-*
          path: wheelhouse
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: "./wheelhouse"
